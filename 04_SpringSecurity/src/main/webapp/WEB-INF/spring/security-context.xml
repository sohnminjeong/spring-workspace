<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.2.xsd">
	
	<bean id="customLoginSuccess" class="com.kh.security.util.CustomLoginSuccessHandler"/>
	
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	<context:component-scan base-package="com.kh.security"/>
	
	<bean id="memberService" class="com.kh.security.service.MemberService"/>
	
	<security:http>
		<security:intercept-url pattern="/all" access="permitAll"/>
		<security:intercept-url pattern="/member" access="hasAnyRole('ROLE_MEMBER', 'ROLE_ADMIN')"/>
		<security:intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')"/>
		<security:form-login login-page="/login" authentication-success-handler-ref="customLoginSuccess" />
		<security:csrf disabled="true"/>
		<security:access-denied-handler error-page="/error"/>
		<security:logout logout-url="/logout" invalidate-session="true"/>
	</security:http>
	
	<!-- 인증 매니저 : 다양한 방식의 인증을 처리할 수 있도록 설계 -->
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="memberService">
			<security:password-encoder hash="bcrypt"/>
		</security:authentication-provider>
	</security:authentication-manager>
</beans>
